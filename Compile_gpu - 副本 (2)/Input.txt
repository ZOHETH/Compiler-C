Program->Global-declaration Program_1 
Program_1->Global-declaration Program_1 |@ 
Global-declaration->Indent-decl Global-declaration_1 
Global-declaration_1->Function-decl |G-variable-decl 
Indent-decl->Type Indent-decl_1 
Indent-decl_1->Pointer id <ident-rec> 
Function-decl->( Parameter_decl ) { Body-decl <id-to-glo>} <leave> 
G-variable-decl->Decl_1 ; 
Parameter_decl->Type Pointer id <parameter-rec>Decl_3 |@ 
Decl_1->, Indent-decl_1 Decl_1 |@ 
Variable-decl->Type Variable-decl_1 
Variable-decl_1->Pointer id <loc-var-rec>Decl_2 ; 
Decl_2->, Pointer id <loc-var-rec>Decl_2 |@ 
Decl_3->, Pointer id <parameter-rec>Decl_3 |@ 
Pointer->* Pointer <add_pointer>|@ 
Type->char <update_type>|void <update_type>|int <update_type> 
Body-decl-><loc-index-rec>Body-decl_1 <func-enter>Body-decl_2  
Body-decl_1->Variable-decl Body-decl_1 |@ 
Body-decl_2->Statement Body-decl_2 |@ 
Statement->If-statement |While-statement |{ Statement } |return Expression ; <leave>|Expression <back>; 
If-statement->if ( Expression ) <if-begin>Statement else <else-begin>Statement <if-end-rec> 
While-statement->while <after-while>( Expression ) <while-begin>Statement <while-end> 
Expression->int_const <imm-num>Expr |id <var-value>Expr |( Expression ) 
Expr-><back>= <pk-assign>Expression |<back>+ <pk-add>Expression |<back>* <pk-mul>Expression |@ 